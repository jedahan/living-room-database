{"version":3,"file":"RoomDB.js","sources":["../src/parse.js","../src/AbstractClient.js","../src/terms.js","../src/LocalClient.js","../src/Fact.js","../src/RoomDB.js"],"sourcesContent":["'use strict'\n\nconst ohm = require('ohm-js')\n\nconst grammar = ohm.grammar(`\n  G {\n\n    factOrPattern\n      = term*\n\n    term\n      = id\n      | word\n      | value\n      | variable\n      | wildcard\n      | hole\n\n    id\n      = \"#\" alnum*\n\n    value\n      = keyword<\"true\">   -- true\n      | keyword<\"false\">  -- false\n      | keyword<\"null\">   -- null\n      | number\n      | string\n\n    variable\n      = \"$\" alnum+\n\n    wildcard\n      = \"$\"\n\n    hole\n      = \"_\"\n\n    word\n      = (~special any)+  -- nonspace\n      | space+           -- space\n\n    keyword<k>\n      = k ~alnum\n\n    number\n      = float (\"e\" float)?\n\n    float\n      = integer (\".\" digit+)?\n\n    integer\n      = (\"+\" | \"-\")? digit+\n\n    string\n      = \"\\\\\"\" (~\"\\\\\"\" ~\"\\\\n\" any)* \"\\\\\"\"\n\n    special\n      = id | value | variable | wildcard | hole | space\n\n  }\n`)\n\nconst semantics = grammar.createSemantics().addOperation('parse', {\n  factOrPattern (terms) {\n    return terms.parse()\n  },\n  id (_, cs) {\n    return { id: cs.sourceString }\n  },\n  value_true (_) {\n    return { value: true }\n  },\n  value_false (_) {\n    return { value: false }\n  },\n  value_null (_) {\n    return { value: null }\n  },\n  variable (_, cs) {\n    return { variable: cs.sourceString }\n  },\n  wildcard (_) {\n    return { wildcard: true }\n  },\n  hole (_) {\n    return { hole: true }\n  },\n  word_nonspace (_) {\n    return { word: this.sourceString }\n  },\n  word_space (_) {\n    return { word: ' ' }\n  },\n  number (_1, _2, _3) {\n    return { value: parseFloat(this.sourceString) }\n  },\n  string (_oq, cs, _cq) {\n    const chars = []\n    let idx = 0\n    cs = cs.parse()\n    while (idx < cs.length) {\n      let c = cs[idx++]\n      if (c === '\\\\' && idx < cs.length) {\n        c = cs[idx++]\n        switch (c) {\n          case 'n':\n            c = '\\n'\n            break\n          case 't':\n            c = '\\t'\n            break\n          default:\n            idx--\n        }\n      }\n      chars.push(c)\n    }\n    return { value: chars.join('') }\n  },\n  _terminal () {\n    return this.sourceString\n  }\n})\n\nexport default function parse (str, optRule) {\n  const rule = optRule || 'factOrPattern'\n  const matchResult = grammar.match(str.trim(), rule)\n  if (matchResult.succeeded()) {\n    return semantics(matchResult).parse()\n  } else {\n    throw new Error(`invalid ${rule}: ${str}`)\n  }\n}\n","'use strict'\n\nimport parse from './parse'\n\nconst MAX_PARSE_CACHE_SIZE = 1000\n\nexport default class AbstractClient {\n  constructor (id) {\n    this._id = id\n    this._parseCache = new Map()\n    this._asserts = []\n    this._retracts = []\n  }\n\n  assert (factString, ...fillerValues) {\n    const fact = this._toJSONFactOrPattern(factString, ...fillerValues)\n    this._asserts.push(fact)\n  }\n\n  retract (patternString, ...fillerValues) {\n    const pattern = this._toJSONFactOrPattern(patternString, ...fillerValues)\n    this._retracts.push(pattern)\n  }\n\n  async flushChanges () {\n    throw new Error('subclass responsibility')\n  }\n\n  async immediatelyAssert (factString, ...fillerValues) {\n    this.assert(factString, ...fillerValues)\n    await this.flushChanges()\n  }\n\n  async immediatelyRetract (patternString, ...fillerValues) {\n    this.retract(patternString, ...fillerValues)\n    await this.flushChanges()\n  }\n\n  async immediatelyRetractEverythingAbout (name) {\n    throw new Error('subclass responsibility')\n  }\n\n  async immediatelyRetractEverythingAssertedByMe () {\n    throw new Error('subclass responsibility')\n  }\n\n  async getAllFacts () {\n    throw new Error('subclass responsibility')\n  }\n\n  _toJSONFactOrPattern (factOrPatternString, ...fillerValues) {\n    if (arguments.length === 0) {\n      throw new Error('not enough arguments!')\n    }\n    if (typeof factOrPatternString !== 'string') {\n      throw new Error('factOrPatternString must be a string!')\n    }\n    let terms = this._parse(factOrPatternString)\n    if (fillerValues.length > 0) {\n      terms = terms.slice()\n    }\n    for (let idx = 0; idx < terms.length; idx++) {\n      const term = terms[idx]\n      if (term.hasOwnProperty('hole')) {\n        if (fillerValues.length === 0) {\n          throw new Error('not enough filler values!')\n        }\n        terms[idx] = this._toJSONTerm(fillerValues.shift())\n      }\n    }\n    if (fillerValues.length > 0) {\n      throw new Error('too many filler values!')\n    }\n    return terms\n  }\n\n  _toJSONTerm (value) {\n    return { value: value }\n  }\n\n  _parse (factOrPatternString) {\n    if (this._parseCache.has(factOrPatternString)) {\n      return this._parseCache.get(factOrPatternString)\n    } else {\n      this._clearParseCacheIfTooBig()\n      const terms = parse(factOrPatternString)\n      this._parseCache.set(factOrPatternString, terms)\n      return terms\n    }\n  }\n\n  _clearParseCacheIfTooBig () {\n    if (this._parseCache.size > MAX_PARSE_CACHE_SIZE) {\n      this.clearParseCache()\n    }\n  }\n\n  clearParseCache () {\n    this._parseCache.clear()\n  }\n}\n","'use strict'\n\nclass Term {\n  toString () {\n    throw new Error('subclass responsibility')\n  }\n\n  toJSON () {\n    throw new Error('subclass responsibility')\n  }\n\n  toRawValue () {\n    throw new Error('subclass responsibility')\n  }\n\n  match (that, env) {\n    throw new Error('subclass responsibility')\n  }\n}\n\nTerm.fromJSON = json => {\n  if (json.hasOwnProperty('id')) {\n    return new Id(json.id)\n  } else if (json.hasOwnProperty('word')) {\n    return new Word(json.word)\n  } else if (json.hasOwnProperty('value')) {\n    return new Value(json.value)\n  } else if (json.hasOwnProperty('blobRef')) {\n    return new BlobRef(json.blobRef)\n  } else if (json.hasOwnProperty('variable')) {\n    return new Variable(json.variable)\n  } else if (json.hasOwnProperty('wildcard')) {\n    return new Wildcard()\n  } else if (json.hasOwnProperty('hole')) {\n    return new Hole()\n  } else {\n    throw new Error('unrecognized JSON term: ' + JSON.stringify(json))\n  }\n}\n\nclass Id extends Term {\n  constructor (name) {\n    super()\n    this.name = name\n  }\n\n  toString () {\n    return '#' + this.name\n  }\n\n  toJSON () {\n    return { id: this.name }\n  }\n\n  toRawValue () {\n    return this\n  }\n\n  match (that, env) {\n    return that instanceof Id && this.name === that.name ? env : null\n  }\n}\n\nclass Word extends Term {\n  constructor (value) {\n    super()\n    this.value = value\n  }\n\n  toString () {\n    return this.value\n  }\n\n  toJSON () {\n    return { word: this.value }\n  }\n\n  toRawValue () {\n    return this\n  }\n\n  match (that, env) {\n    return that instanceof Word && this.value === that.value ? env : null\n  }\n}\n\nclass Value extends Term {\n  constructor (value) {\n    super()\n    this.value = value\n  }\n\n  toString () {\n    return JSON.stringify(this.value)\n  }\n\n  toJSON () {\n    return { value: this.value }\n  }\n\n  toRawValue () {\n    return this.value\n  }\n\n  match (that, env) {\n    return that instanceof Value && this.value === that.value ? env : null\n  }\n}\n\nclass BlobRef extends Term {\n  constructor (id) {\n    super()\n    this.id = id\n  }\n\n  toString () {\n    return '@' + this.id\n  }\n\n  toJSON () {\n    return { blobRef: this.id }\n  }\n\n  toRawValue () {\n    return this\n  }\n\n  match (that, env) {\n    return that instanceof BlobRef && this.id === that.id ? env : null\n  }\n}\n\nclass Variable extends Term {\n  constructor (name) {\n    super()\n    this.name = name\n  }\n\n  toString () {\n    return '$' + this.name\n  }\n\n  toJSON () {\n    return { variable: this.name }\n  }\n\n  toRawValue () {\n    throw new Error(\"Variable's toRawValue() should never be called!\")\n  }\n\n  match (that, env) {\n    if (env[this.name] === undefined) {\n      env[this.name] = that\n      return env\n    } else {\n      return env[this.name].match(that, env)\n    }\n  }\n}\n\nclass Wildcard extends Term {\n  constructor () {\n    super()\n    // no-op\n  }\n\n  toString () {\n    return '$'\n  }\n\n  toJSON () {\n    return { wildcard: true }\n  }\n\n  toRawValue () {\n    throw new Error(\"Wildcard's toRawValue() should never be called!\")\n  }\n\n  match (that, env) {\n    return env\n  }\n}\n\nclass Hole extends Term {\n  constructor () {\n    super()\n    // no-op\n  }\n\n  toString () {\n    return '_'\n  }\n\n  toJSON () {\n    return { hole: true }\n  }\n\n  toRawValue () {\n    throw new Error(\"Hole's toRawValue() should never be called!\")\n  }\n\n  match (that, env) {\n    throw new Error(\"Hole's match() should never be called!\")\n  }\n}\n\nexport { Term, Id, Word, Value, BlobRef, Variable, Wildcard, Hole }\n","'use strict'\n\nimport AbstractClient from './AbstractClient'\nimport { Term } from './terms'\n\nexport default class LocalClient extends AbstractClient {\n  constructor (db, id) {\n    super(id)\n    this._db = db\n  }\n\n  /**\n   * @param [`selectstring`, `another`] select string\n   * @param callback callback\n   */\n\n  subscribe (patterns, callback) {\n    if (typeof patterns === 'string') patterns = [patterns]\n    const jsonPatterns = patterns.map(patternString =>\n      this._toJSONFactOrPattern(patternString)\n    )\n    return this._db.on(JSON.stringify(jsonPatterns), callback)\n  }\n\n  select (...patternStrings) {\n    const patterns = patternStrings.map(\n      p =>\n        p instanceof Array\n          ? this._toJSONFactOrPattern(...p)\n          : this._toJSONFactOrPattern(p)\n    )\n    const solutions = this._db.select(...patterns)\n    const results = {\n      async doAll (callbackFn) {\n        await callbackFn(solutions)\n        return results\n      },\n      async do (callbackFn) {\n        for (let solution of solutions) {\n          for (let name in solution) {\n            // force serialization and deserialization to simulate going over the network\n            const json = JSON.parse(JSON.stringify(solution[name]))\n            solution[name] = Term.fromJSON(json).toRawValue()\n          }\n          await callbackFn(solution)\n        }\n        return results\n      },\n      async count () {\n        return solutions.length\n      },\n      async isEmpty () {\n        return solutions.length === 0\n      },\n      async isNotEmpty () {\n        return solutions.length > 0\n      }\n    }\n    return results\n  }\n\n  async flushChanges () {\n    this._retracts.forEach(pattern => this._db.retract(this._id, pattern))\n    this._retracts = []\n    this._asserts.forEach(fact => this._db.assert(this._id, fact))\n    this._asserts = []\n  }\n\n  async immediatelyRetractEverythingAbout (name) {\n    return this._db.retractEverythingAbout(this._id, name)\n  }\n\n  async immediatelyRetractEverythingAssertedByMe () {\n    return this._db.retractEverythingAssertedBy(this._id)\n  }\n\n  async getAllFacts () {\n    return this._db.getAllFacts()\n  }\n\n  toString () {\n    return `[LocalClient ${this._id}]`\n  }\n}\n\nmodule.exports = LocalClient\n","'use strict'\n\nimport { Term, Variable, Wildcard } from './terms'\n\nclass Fact {\n  constructor (terms) {\n    this.terms = terms\n  }\n\n  hasVariablesOrWildcards () {\n    return this.terms.some(\n      term => term instanceof Variable || term instanceof Wildcard\n    )\n  }\n\n  match (that, env) {\n    if (this.terms.length !== that.terms.length) {\n      return null\n    }\n    for (let idx = 0; idx < this.terms.length; idx++) {\n      const thisTerm = this.terms[idx]\n      const thatTerm = that.terms[idx]\n      if (!thisTerm.match(thatTerm, env)) {\n        return null\n      }\n    }\n    return env\n  }\n\n  toString () {\n    return this.terms.map(term => term.toString()).join('')\n  }\n}\n\nFact.fromJSON = jsonTerms => {\n  return new Fact(jsonTerms.map(jsonTerm => Term.fromJSON(jsonTerm)))\n}\n\nexport default Fact\n","'use strict'\n\nimport LocalClient from './LocalClient'\nimport { Id } from './terms'\nimport Fact from './Fact'\nimport EventEmitter from 'events'\n\nfunction flatten (obj) {\n  for (let prop in obj) {\n    obj[prop] = obj[prop]\n  }\n  return obj\n}\n\nfunction difference (setA, setB) {\n  let difference = new Set(setA)\n  for (let elem of setB) {\n    difference.delete(elem)\n  }\n  return difference\n}\n\nexport default class RoomDB extends EventEmitter {\n  constructor () {\n    super()\n    this._factMap = new Map()\n    this._subscriptions = new Set()\n\n    this.on('newListener', (jsonPatternsString, callback) => {\n      this._subscriptions.add(jsonPatternsString)\n\n      callback({\n        assertions: this.select(...JSON.parse(jsonPatternsString)),\n        retractions: []\n      })\n    })\n  }\n\n  select (...jsonPatterns) {\n    const patterns = jsonPatterns.map(jsonPattern => Fact.fromJSON(jsonPattern))\n    const solutions = []\n    this._collectSolutions(patterns, Object.create(null), solutions)\n    return solutions.map(flatten)\n  }\n\n  _collectSolutions (patterns, env, solutions) {\n    if (patterns.length === 0) {\n      solutions.push(env)\n    } else {\n      const pattern = patterns[0]\n      for (let fact of this._facts) {\n        const newEnv = Object.create(env)\n        if (pattern.match(fact, newEnv)) {\n          this._collectSolutions(patterns.slice(1), newEnv, solutions)\n        }\n      }\n    }\n  }\n\n  _emitChanges (fn) {\n    const subscriptions = this._subscriptions\n    /**\n     * beforeFacts: {\n     *  '$name is at $x, $y': Set { }\n     * }\n     */\n    const beforeFacts = new Map()\n    subscriptions.forEach(jsonPatternString => {\n      const jsonPatterns = JSON.parse(jsonPatternString)\n      const solutions = this.select(...jsonPatterns)\n      beforeFacts.set(jsonPatternString, new Set(solutions.map(JSON.stringify)))\n    })\n    // assert('gorog is at 1, 2')\n    fn()\n\n    /**\n     * afterFacts: {\n     *  '$name is at $x, $y': Set{ {name: 'gorog', x: 1, y: 2} }\n     * }\n     */\n    const afterFacts = new Map()\n    subscriptions.forEach(jsonPatternString => {\n      const jsonPatterns = JSON.parse(jsonPatternString)\n      const solutions = this.select(...jsonPatterns)\n      afterFacts.set(jsonPatternString, new Set(solutions.map(JSON.stringify)))\n    })\n    /**\n     * {\n     *    assertions: [ {name: 'gorog', x: 1, y: 2} ]\n     * }\n     */\n    subscriptions.forEach(jsonPatternString => {\n      const before = beforeFacts.get(jsonPatternString)\n      const after = afterFacts.get(jsonPatternString)\n\n      const assertions = Array.from(difference(after, before)).map(JSON.parse)\n      const retractions = Array.from(difference(before, after)).map(JSON.parse)\n      if (assertions.length + retractions.length) {\n        this.emit(jsonPatternString, {\n          pattern: jsonPatternString,\n          assertions,\n          retractions\n        })\n      }\n    })\n  }\n\n  assert (...args) {\n    const assert = this._assert.bind(this, ...args)\n    this._emitChanges(assert)\n  }\n\n  _assert (clientId, factJSON) {\n    if (factJSON === undefined) {\n      throw new Error('factJSON is undefined')\n    }\n    const fact = Fact.fromJSON(factJSON)\n\n    if (fact.hasVariablesOrWildcards()) {\n      throw new Error('cannot assert a fact that has variables or wildcards!')\n    }\n    fact.asserter = clientId\n    const a = new Set()\n    a.keys\n    this._factMap.set(fact.toString(), fact)\n  }\n\n  retract (...args) {\n    const retract = this._retract.bind(this, ...args)\n    this._emitChanges(retract)\n  }\n\n  _retract (clientId, factJSON) {\n    const pattern = Fact.fromJSON(factJSON)\n    if (pattern.hasVariablesOrWildcards()) {\n      const factsToRetract = this._facts.filter(fact =>\n        pattern.match(fact, Object.create(null))\n      )\n      factsToRetract.forEach(fact => this._factMap.delete(fact.toString()))\n      return factsToRetract.length\n    } else {\n      return this._factMap.delete(pattern.toString()) ? 1 : 0\n    }\n  }\n\n  retractEverythingAbout (clientId, name) {\n    const id = new Id(name)\n    const emptyEnv = Object.create(null)\n    const factsToRetract = this._facts.filter(fact =>\n      fact.terms.some(term => id.match(term, emptyEnv))\n    )\n    factsToRetract.forEach(fact => this._factMap.delete(fact.toString()))\n    return factsToRetract.length\n  }\n\n  retractEverythingAssertedBy (clientId) {\n    const factsToRetract = this._facts.filter(\n      fact => fact.asserter === clientId\n    )\n    factsToRetract.forEach(fact => this._factMap.delete(fact.toString()))\n    return factsToRetract.length\n  }\n\n  get _facts () {\n    return Array.from(this._factMap.values())\n  }\n\n  getAllFacts () {\n    return this._facts.map(fact => fact.toString())\n  }\n\n  toString () {\n    return this._facts\n      .map(fact => '<' + fact.asserter + '> ' + fact.toString())\n      .join('\\n')\n  }\n\n  client (id = 'local-client') {\n    return new LocalClient(this, id)\n  }\n}\n"],"names":[],"mappings":"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"}